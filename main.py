# -*- coding: utf-8 -*-
"""Копия блокнота "Download_dataSet.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qHx5p-q27fDNHY1TN2_rXLrMQvk4x8bl

Data overview
"""

import numpy as np
import pandas as pd
import scipy
import scipy.signal
import datetime
import matplotlib
import matplotlib.pyplot as plt
import tqdm
import os
import glob
from pathlib import Path

#Defines
train_csv_path = "./train.csv"
sample_csv_path = "./sample_submission.csv"
single_segment = "./1003520023.csv"
train_data_path = ""
test_data_path = ""

train = pd.read_csv(train_csv_path)
sample_submission = pd.read_csv(sample_csv_path)

# Convert 'time_to_eruption'to hours:minutes:seconds (Just for reference)
#train['days_hours_minutes_seconds'] = (train['time_to_eruption']
             #     .apply(lambda x:datetime.timedelta(seconds = x/100))) 100???? why

train

train['time_to_eruption'].describe()

print('Median:', train['time_to_eruption'].median())
print('Skew:', train['time_to_eruption'].skew()) #symetric?
print('Std:', train['time_to_eruption'].std())
print('Kurtosis:', train['time_to_eruption'].kurtosis()) #heavy-tailed?
print('Mean:', train['time_to_eruption'].mean())

sample_submission

"""Look on single segment

"""

segment = pd.read_csv(single_segment,dtype ="int16")
segment.describe()

segment.fillna(0).plot(subplots=True, figsize=(25, 10))
plt.tight_layout()
plt.show()

"""Merge data for train/test"""

train_segmnets = glob.glob(os.path.join(train_data_path,"1*.csv"))
#train_segmnets = glob.glob(os.path.join(test_data_path,"1*.csv"))

train_segmnets[0]

"""Concat segments"""

lst_of_segments_data = []
lst_of_segments_number = []
#read each segment and save inside li
for filename in train_segmnets:
    df = pd.read_csv(filename, index_col=None, header=0)
    lst_of_segments_data.append(df)
    lst_of_segments_number.append(int(filename[:-4]))
lst_of_segments_data[1]

#frame = pd.concat(li, axis=0, ignore_index=True)
#frame
segNum_segData= dict(zip(lst_of_segments_number, lst_of_segments_data))
segNum_segData

from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error as mse
import lightgbm as lgb

"""Linear regression"""

def LinearRegression